# Generated by Keploy (2.6.14)
version: api.keploy.io/v1beta1
kind: Http
name: test-6
spec:
    metadata: {}
    req:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: http://localhost:5000/
        header:
            Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7
            Accept-Encoding: gzip, deflate, br, zstd
            Accept-Language: en-GB,en-US;q=0.9,en;q=0.8,hi;q=0.7
            Connection: keep-alive
            Host: localhost:5000
            If-Modified-Since: Thu, 26 Jun 2025 09:59:42 GMT
            If-None-Match: W/"52a4-197abadc9c9"
            Sec-Ch-Ua: '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"'
            Sec-Ch-Ua-Mobile: ?0
            Sec-Ch-Ua-Platform: '"Windows"'
            Sec-Fetch-Dest: document
            Sec-Fetch-Mode: navigate
            Sec-Fetch-Site: none
            Sec-Fetch-User: ?1
            Upgrade-Insecure-Requests: "1"
            User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
        body: ""
        timestamp: 2025-06-27T07:12:24.265927008Z
    resp:
        status_code: 200
        header:
            Accept-Ranges: bytes
            Cache-Control: public, max-age=0
            Connection: keep-alive
            Content-Length: "21156"
            Content-Type: text/html; charset=utf-8
            Date: Fri, 27 Jun 2025 07:12:24 GMT
            Etag: W/"52a4-197abadc6b0"
            Keep-Alive: timeout=5
            Last-Modified: Thu, 26 Jun 2025 09:59:42 GMT
            X-Powered-By: Express
        body: "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>Item Manager | Premium Dashboard</title>\r\n  <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\r\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css\">\r\n  <script src=\"https://cdn.tailwindcss.com\"></script>\r\n  <style>\r\n    :root {\r\n      --primary: #6366f1;\r\n      --primary-dark: #4f46e5;\r\n      --dark: #1e293b;\r\n      --light: #f8fafc;\r\n    }\r\n    \r\n    body {\r\n      font-family: 'Inter', sans-serif;\r\n      transition: all 0.3s ease;\r\n    }\r\n    \r\n    .dark body {\r\n      background-color: #0f172a;\r\n      color: #f8fafc;\r\n    }\r\n    \r\n    .card {\r\n      backdrop-filter: blur(16px) saturate(180%);\r\n      -webkit-backdrop-filter: blur(16px) saturate(180%);\r\n      background-color: rgba(255, 255, 255, 0.75);\r\n      border-radius: 12px;\r\n      border: 1px solid rgba(209, 213, 219, 0.3);\r\n    }\r\n    \r\n    .dark .card {\r\n      background-color: rgba(15, 23, 42, 0.75);\r\n      border: 1px solid rgba(255, 255, 255, 0.125);\r\n    }\r\n    \r\n    .btn-primary {\r\n      background: linear-gradient(135deg, var(--primary), var(--primary-dark));\r\n      transition: all 0.3s ease;\r\n    }\r\n    \r\n    .btn-primary:hover {\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 10px 15px -3px rgba(99, 102, 241, 0.3);\r\n    }\r\n    \r\n    .btn-danger {\r\n      background: linear-gradient(135deg, #ef4444, #dc2626);\r\n    }\r\n    \r\n    .btn-danger:hover {\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 10px 15px -3px rgba(239, 68, 68, 0.3);\r\n    }\r\n    \r\n    .btn-secondary {\r\n      background: linear-gradient(135deg, #94a3b8, #64748b);\r\n    }\r\n    \r\n    .btn-secondary:hover {\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 10px 15px -3px rgba(100, 116, 139, 0.3);\r\n    }\r\n    \r\n    .table-row {\r\n      transition: all 0.3s ease;\r\n    }\r\n    \r\n    .table-row:hover {\r\n      transform: translateX(4px);\r\n    }\r\n    \r\n    .fade-in {\r\n      animation: fadeIn 0.5s ease-in;\r\n    }\r\n    \r\n    @keyframes fadeIn {\r\n      from { opacity: 0; transform: translateY(10px); }\r\n      to { opacity: 1; transform: translateY(0); }\r\n    }\r\n    \r\n    .switch {\r\n      position: relative;\r\n      display: inline-block;\r\n      width: 60px;\r\n      height: 30px;\r\n    }\r\n    \r\n    .switch input {\r\n      opacity: 0;\r\n      width: 0;\r\n      height: 0;\r\n    }\r\n    \r\n    .slider {\r\n      position: absolute;\r\n      cursor: pointer;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      background-color: #ccc;\r\n      transition: .4s;\r\n      border-radius: 34px;\r\n    }\r\n    \r\n    .slider:before {\r\n      position: absolute;\r\n      content: \"\";\r\n      height: 22px;\r\n      width: 22px;\r\n      left: 4px;\r\n      bottom: 4px;\r\n      background-color: white;\r\n      transition: .4s;\r\n      border-radius: 50%;\r\n    }\r\n    \r\n    input:checked + .slider {\r\n      background: linear-gradient(135deg, var(--primary), var(--primary-dark));\r\n    }\r\n    \r\n    input:checked + .slider:before {\r\n      transform: translateX(30px);\r\n    }\r\n    \r\n    .toggle-label {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      cursor: pointer;\r\n    }\r\n    \r\n    .checkbox-container {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n    }\r\n    \r\n    .custom-checkbox {\r\n      width: 20px;\r\n      height: 20px;\r\n      border: 2px solid var(--primary);\r\n      border-radius: 4px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      cursor: pointer;\r\n      transition: all 0.3s ease;\r\n    }\r\n    \r\n    .custom-checkbox.checked {\r\n      background-color: var(--primary);\r\n    }\r\n    \r\n    .custom-checkbox.checked::after {\r\n      content: \"âœ“\";\r\n      color: white;\r\n      font-size: 12px;\r\n    }\r\n    \r\n    .floating-btn {\r\n      position: fixed;\r\n      bottom: 1rem;\r\n      right: 1rem;\r\n      width: 50px;\r\n      height: 50px;\r\n      border-radius: 50%;\r\n      background: linear-gradient(135deg, var(--primary), var(--primary-dark));\r\n      color: white;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      font-size: 20px;\r\n      box-shadow: 0 10px 25px -5px rgba(99, 102, 241, 0.4);\r\n      cursor: pointer;\r\n      transition: all 0.3s ease;\r\n      z-index: 50;\r\n    }\r\n    \r\n    .floating-btn:hover {\r\n      transform: scale(1.1) rotate(90deg);\r\n    }\r\n    \r\n    .form-container {\r\n      max-height: 0;\r\n      overflow: hidden;\r\n      transition: max-height 0.5s ease;\r\n    }\r\n    \r\n    .form-container.open {\r\n      max-height: 500px;\r\n    }\r\n    \r\n    .toast {\r\n      position: fixed;\r\n      top: 20px;\r\n      right: 20px;\r\n      padding: 15px 25px;\r\n      border-radius: 8px;\r\n      background: linear-gradient(135deg, var(--primary), var(--primary-dark));\r\n      color: white;\r\n      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);\r\n      transform: translateX(200%);\r\n      transition: transform 0.3s ease;\r\n      z-index: 100;\r\n      max-width: 90%;\r\n    }\r\n    \r\n    .toast.show {\r\n      transform: translateX(0);\r\n    }\r\n    \r\n    .toast.error {\r\n      background: linear-gradient(135deg, #ef4444, #dc2626);\r\n    }\r\n\r\n    /* Mobile-specific adjustments */\r\n    @media (max-width: 768px) {\r\n      .container {\r\n        padding: 1rem;\r\n      }\r\n\r\n      header {\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n        gap: 1rem;\r\n        margin-bottom: 1.5rem;\r\n      }\r\n\r\n      .grid {\r\n        gap: 1.5rem;\r\n      }\r\n\r\n      .card {\r\n        padding: 1.25rem;\r\n      }\r\n\r\n      .table td, .table th {\r\n        padding: 0.5rem;\r\n      }\r\n\r\n      .table-row:hover {\r\n        transform: none;\r\n      }\r\n\r\n      .switch {\r\n        width: 50px;\r\n        height: 25px;\r\n      }\r\n\r\n      .slider:before {\r\n        height: 18px;\r\n        width: 18px;\r\n      }\r\n\r\n      input:checked + .slider:before {\r\n        transform: translateX(25px);\r\n      }\r\n\r\n      .btn-primary, .btn-secondary, .btn-danger {\r\n        padding: 0.5rem 1rem;\r\n      }\r\n\r\n      .quick-stats {\r\n        grid-template-columns: 1fr;\r\n        gap: 0.75rem;\r\n      }\r\n\r\n      #searchInput {\r\n        width: 100%;\r\n        margin-top: 0.5rem;\r\n      }\r\n    }\r\n\r\n    /* Responsive table */\r\n    @media (max-width: 640px) {\r\n      table {\r\n        width: 100%;\r\n        display: block;\r\n        overflow-x: auto;\r\n      }\r\n    }\r\n  </style>\r\n</head>\r\n<body class=\"bg-gray-50 dark:bg-slate-900 transition-colors duration-300\">\r\n  <div class=\"toast\" id=\"toast\"></div>\r\n\r\n  <div class=\"container mx-auto px-4 py-4 sm:py-8\">\r\n    <header class=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 sm:mb-10 gap-4\">\r\n      <h1 class=\"text-2xl sm:text-3xl font-bold bg-gradient-to-r from-indigo-500 to-purple-600 bg-clip-text text-transparent\">\r\n        Item Manager Pro\r\n      </h1>\r\n      <div class=\"flex items-center gap-4 w-full sm:w-auto\">\r\n        <label class=\"toggle-label\">\r\n          <span class=\"text-sm font-medium\">Dark Mode</span>\r\n          <div class=\"switch\">\r\n            <input type=\"checkbox\" id=\"darkModeToggle\">\r\n            <span class=\"slider\"></span>\r\n          </div>\r\n        </label>\r\n      </div>\r\n    </header>\r\n\r\n    <div class=\"grid grid-cols-1 lg:grid-cols-3 gap-6 sm:gap-8\">\r\n      <div class=\"lg:col-span-1\">\r\n        <div class=\"card p-4 sm:p-6 shadow-lg\">\r\n          <h2 class=\"text-lg sm:text-xl font-semibold mb-3 sm:mb-4\">Add New Item</h2>\r\n          <form id=\"itemForm\" class=\"space-y-3 sm:space-y-4\">\r\n            <div>\r\n              <label for=\"name\" class=\"block text-sm font-medium mb-1\">Name</label>\r\n              <input type=\"text\" id=\"name\" required \r\n                     class=\"w-full px-3 sm:px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 focus:ring-2 focus:ring-indigo-500 focus:border-transparent dark:bg-slate-800 dark:text-white transition\">\r\n            </div>\r\n            \r\n            <div>\r\n              <label for=\"price\" class=\"block text-sm font-medium mb-1\">Price</label>\r\n              <input type=\"number\" id=\"price\" required \r\n                     class=\"w-full px-3 sm:px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 focus:ring-2 focus:ring-indigo-500 focus:border-transparent dark:bg-slate-800 dark:text-white transition\">\r\n            </div>\r\n            \r\n            <div class=\"checkbox-container\">\r\n              <div id=\"inStockCheckbox\" class=\"custom-checkbox\"></div>\r\n              <label for=\"inStock\" class=\"text-sm font-medium cursor-pointer\">In Stock</label>\r\n              <input type=\"checkbox\" id=\"inStock\" class=\"hidden\">\r\n            </div>\r\n            \r\n            <button type=\"submit\" class=\"btn-primary text-white font-medium py-2 px-4 sm:px-6 rounded-lg transition w-full sm:w-auto\">\r\n              Add Item\r\n            </button>\r\n          </form>\r\n        </div>\r\n        \r\n        <div class=\"card p-4 sm:p-6 shadow-lg mt-4 sm:mt-6\">\r\n          <h2 class=\"text-lg sm:text-xl font-semibold mb-3 sm:mb-4\">Quick Stats</h2>\r\n          <div class=\"grid grid-cols-2 gap-3 sm:gap-4\">\r\n            <div class=\"bg-indigo-50 dark:bg-slate-800 p-3 sm:p-4 rounded-lg\">\r\n              <p class=\"text-sm text-indigo-600 dark:text-indigo-400\">Total Items</p>\r\n              <p class=\"text-xl sm:text-2xl font-bold\" id=\"totalItems\">0</p>\r\n            </div>\r\n            <div class=\"bg-green-50 dark:bg-slate-800 p-3 sm:p-4 rounded-lg\">\r\n              <p class=\"text-sm text-green-600 dark:text-green-400\">In Stock</p>\r\n              <p class=\"text-xl sm:text-2xl font-bold\" id=\"inStockItems\">0</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"lg:col-span-2\">\r\n        <div class=\"card p-4 sm:p-6 shadow-lg\">\r\n          <div class=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-4 sm:mb-6 gap-3\">\r\n            <h2 class=\"text-lg sm:text-xl font-semibold\">Inventory</h2>\r\n            <div class=\"relative w-full sm:w-auto\">\r\n              <input type=\"text\" id=\"searchInput\" placeholder=\"Search items...\" \r\n                     class=\"w-full px-3 sm:px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 focus:ring-2 focus:ring-indigo-500 focus:border-transparent dark:bg-slate-800 dark:text-white transition pl-10\">\r\n              <svg class=\"w-5 h-5 text-gray-400 absolute left-3 top-2.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"overflow-x-auto\">\r\n            <table class=\"w-full\">\r\n              <thead class=\"hidden sm:table-header-group\">\r\n                <tr class=\"border-b border-gray-200 dark:border-gray-700\">\r\n                  <th class=\"py-3 text-left\">Name</th>\r\n                  <th class=\"py-3 text-left\">Price</th>\r\n                  <th class=\"py-3 text-left\">Status</th>\r\n                  <th class=\"py-3 text-right\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody id=\"itemsTable\" class=\"divide-y divide-gray-200 dark:divide-gray-700\">\r\n                <!-- Items will be loaded here -->\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          \r\n          <div class=\"mt-4 flex flex-col sm:flex-row justify-between items-center gap-3\">\r\n            <div class=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              Showing <span id=\"showingCount\">0</span> of <span id=\"totalCount\">0</span> items\r\n            </div>\r\n            <div class=\"flex space-x-2 w-full sm:w-auto\">\r\n              <button id=\"prevBtn\" class=\"px-3 py-1 rounded border border-gray-300 dark:border-gray-600 disabled:opacity-50 w-full sm:w-auto\">Previous</button>\r\n              <button id=\"nextBtn\" class=\"px-3 py-1 rounded border border-gray-300 dark:border-gray-600 disabled:opacity-50 w-full sm:w-auto\">Next</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"floating-btn\" id=\"addItemBtn\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n    </svg>\r\n  </div>\r\n\r\n  <script>\r\n    // DOM Elements\r\n    const form = document.getElementById('itemForm');\r\n    const table = document.getElementById('itemsTable');\r\n    const darkModeToggle = document.getElementById('darkModeToggle');\r\n    const inStockCheckbox = document.getElementById('inStockCheckbox');\r\n    const inStockInput = document.getElementById('inStock');\r\n    const addItemBtn = document.getElementById('addItemBtn');\r\n    const toast = document.getElementById('toast');\r\n    const searchInput = document.getElementById('searchInput');\r\n    const totalItemsEl = document.getElementById('totalItems');\r\n    const inStockItemsEl = document.getElementById('inStockItems');\r\n    const showingCountEl = document.getElementById('showingCount');\r\n    const totalCountEl = document.getElementById('totalCount');\r\n    const prevBtn = document.getElementById('prevBtn');\r\n    const nextBtn = document.getElementById('nextBtn');\r\n\r\n    // State\r\n    let currentPage = 1;\r\n    const itemsPerPage = 5;\r\n    let allItems = [];\r\n    let filteredItems = [];\r\n\r\n    // Initialize\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n      // Check for saved dark mode preference\r\n      if (localStorage.getItem('darkMode') === 'true') {\r\n        document.documentElement.classList.add('dark');\r\n        darkModeToggle.checked = true;\r\n      }\r\n      \r\n      // Load items\r\n      fetchItems();\r\n      \r\n      // Set up checkbox\r\n      inStockCheckbox.addEventListener('click', () => {\r\n        inStockInput.checked = !inStockInput.checked;\r\n        inStockCheckbox.classList.toggle('checked', inStockInput.checked);\r\n      });\r\n    });\r\n\r\n    // Dark mode toggle\r\n    darkModeToggle.addEventListener('change', () => {\r\n      document.documentElement.classList.toggle('dark');\r\n      localStorage.setItem('darkMode', darkModeToggle.checked);\r\n    });\r\n\r\n    // Floating action button\r\n    addItemBtn.addEventListener('click', () => {\r\n      document.getElementById('name').focus();\r\n      window.scrollTo({\r\n        top: 0,\r\n        behavior: 'smooth'\r\n      });\r\n    });\r\n\r\n    // Show toast notification\r\n    function showToast(message, isError = false) {\r\n      toast.textContent = message;\r\n      toast.className = `toast ${isError ? 'error' : ''} show`;\r\n      \r\n      setTimeout(() => {\r\n        toast.classList.remove('show');\r\n      }, 3000);\r\n    }\r\n\r\n    // Fetch items from API\r\n    async function fetchItems() {\r\n      try {\r\n        const res = await fetch('/api/items');\r\n        if (!res.ok) throw new Error('Failed to fetch items');\r\n        \r\n        allItems = await res.json();\r\n        filteredItems = [...allItems];\r\n        renderItems();\r\n        updateStats();\r\n      } catch (error) {\r\n        showToast(error.message, true);\r\n        console.error('Error fetching items:', error);\r\n      }\r\n    }\r\n\r\n    // Render items in table with pagination\r\n    function renderItems() {\r\n      const startIdx = (currentPage - 1) * itemsPerPage;\r\n      const endIdx = startIdx + itemsPerPage;\r\n      const itemsToShow = filteredItems.slice(startIdx, endIdx);\r\n      const isMobile = window.innerWidth < 640;\r\n      \r\n      table.innerHTML = '';\r\n      \r\n      if (itemsToShow.length === 0) {\r\n        const row = document.createElement('tr');\r\n        row.className = 'text-center py-4';\r\n        row.innerHTML = `<td colspan=\"4\" class=\"py-4 text-gray-500 dark:text-gray-400\">No items found</td>`;\r\n        table.appendChild(row);\r\n      } else {\r\n        itemsToShow.forEach(item => {\r\n          const row = document.createElement('tr');\r\n          row.className = 'table-row fade-in';\r\n          row.innerHTML = `\r\n            <td class=\"py-3 font-medium\">${item.name}</td>\r\n            <td class=\"py-3\">$${item.price.toFixed(2)}</td>\r\n            <td class=\"py-3\">\r\n              <span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${item.inStock ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' : 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'}\">\r\n                ${item.inStock ? 'In Stock' : 'Out of Stock'}\r\n              </span>\r\n            </td>\r\n            <td class=\"py-3 text-right\">\r\n              <div class=\"flex justify-end space-x-2\">\r\n                <button onclick=\"editItem('${item._id}')\" class=\"btn-secondary text-white text-xs font-medium py-1 px-3 rounded transition\">\r\n                  Edit\r\n                </button>\r\n                <button onclick=\"deleteItem('${item._id}')\" class=\"btn-danger text-white text-xs font-medium py-1 px-3 rounded transition\">\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </td>\r\n          `;\r\n          table.appendChild(row);\r\n        });\r\n      }\r\n      \r\n      // Update pagination controls\r\n      totalCountEl.textContent = filteredItems.length;\r\n      showingCountEl.textContent = `${Math.min(startIdx + 1, filteredItems.length)}-${Math.min(endIdx, filteredItems.length)}`;\r\n      \r\n      prevBtn.disabled = currentPage === 1;\r\n      nextBtn.disabled = endIdx >= filteredItems.length;\r\n    }\r\n\r\n    // Update statistics\r\n    function updateStats() {\r\n      totalItemsEl.textContent = allItems.length;\r\n      const inStockCount = allItems.filter(item => item.inStock).length;\r\n      inStockItemsEl.textContent = inStockCount;\r\n    }\r\n\r\n    // Search functionality\r\n    searchInput.addEventListener('input', () => {\r\n      const searchTerm = searchInput.value.toLowerCase();\r\n      filteredItems = allItems.filter(item => \r\n        item.name.toLowerCase().includes(searchTerm) || \r\n        item.price.toString().includes(searchTerm)\r\n      );\r\n      currentPage = 1;\r\n      renderItems();\r\n    });\r\n\r\n    // Pagination\r\n    prevBtn.addEventListener('click', () => {\r\n      if (currentPage > 1) {\r\n        currentPage--;\r\n        renderItems();\r\n      }\r\n    });\r\n\r\n    nextBtn.addEventListener('click', () => {\r\n      if ((currentPage * itemsPerPage) < filteredItems.length) {\r\n        currentPage++;\r\n        renderItems();\r\n      }\r\n    });\r\n\r\n    // Form submission\r\n    form.onsubmit = async (e) => {\r\n      e.preventDefault();\r\n      \r\n      const item = {\r\n        name: document.getElementById('name').value,\r\n        price: parseFloat(document.getElementById('price').value),\r\n        inStock: inStockInput.checked\r\n      };\r\n      \r\n      try {\r\n        const response = await fetch('/api/items', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(item)\r\n        });\r\n        \r\n        if (!response.ok) throw new Error('Failed to add item');\r\n        \r\n        showToast('Item added successfully!');\r\n        form.reset();\r\n        inStockCheckbox.classList.remove('checked');\r\n        inStockInput.checked = false;\r\n        await fetchItems();\r\n      } catch (error) {\r\n        showToast(error.message, true);\r\n        console.error('Error adding item:', error);\r\n      }\r\n    };\r\n\r\n    // Delete item\r\n    async function deleteItem(id) {\r\n      if (!confirm('Are you sure you want to delete this item?')) return;\r\n      \r\n      try {\r\n        const response = await fetch(`/api/items/${id}`, { method: 'DELETE' });\r\n        if (!response.ok) throw new Error('Failed to delete item');\r\n        \r\n        showToast('Item deleted successfully!');\r\n        await fetchItems();\r\n      } catch (error) {\r\n        showToast(error.message, true);\r\n        console.error('Error deleting item:', error);\r\n      }\r\n    }\r\n\r\n    // Edit item\r\n    async function editItem(id) {\r\n      const item = allItems.find(i => i._id === id);\r\n      if (!item) return;\r\n      \r\n      const newName = prompt(\"Enter new name:\", item.name);\r\n      if (newName === null) return;\r\n      \r\n      const newPrice = prompt(\"Enter new price:\", item.price);\r\n      if (newPrice === null) return;\r\n      \r\n      const newStock = confirm(\"Is this item in stock?\");\r\n      \r\n      try {\r\n        const response = await fetch(`/api/items/${id}`, {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ \r\n            name: newName, \r\n            price: parseFloat(newPrice), \r\n            inStock: newStock \r\n          })\r\n        });\r\n        \r\n        if (!response.ok) throw new Error('Failed to update item');\r\n        \r\n        showToast('Item updated successfully!');\r\n        await fetchItems();\r\n      } catch (error) {\r\n        showToast(error.message, true);\r\n        console.error('Error updating item:', error);\r\n      }\r\n    }\r\n\r\n    // Make functions available globally\r\n    window.deleteItem = deleteItem;\r\n    window.editItem = editItem;\r\n  </script>\r\n</body>\r\n</html>"
        status_message: OK
        proto_major: 0
        proto_minor: 0
        timestamp: 2025-06-27T07:12:24.655549384Z
    objects: []
    assertions:
        noise:
            header.Date: []
            header.Last-Modified: []
    created: 1751008344
curl: |
    curl --request GET \
      --url http://localhost:5000/ \
      --header 'Sec-Fetch-Dest: document' \
      --header 'Host: localhost:5000' \
      --header 'Sec-Fetch-Site: none' \
      --header 'Sec-Fetch-Mode: navigate' \
      --header 'Accept-Encoding: gzip, deflate, br, zstd' \
      --header 'Sec-Fetch-User: ?1' \
      --header 'Accept-Language: en-GB,en-US;q=0.9,en;q=0.8,hi;q=0.7' \
      --header 'Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"' \
      --header 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7' \
      --header 'Connection: keep-alive' \
      --header 'Sec-Ch-Ua-Mobile: ?0' \
      --header 'If-None-Match: W/"52a4-197abadc9c9"' \
      --header 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36' \
      --header 'Sec-Ch-Ua-Platform: "Windows"' \
      --header 'Upgrade-Insecure-Requests: 1' \
      --header 'If-Modified-Since: Thu, 26 Jun 2025 09:59:42 GMT' \
